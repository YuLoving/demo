spring:
#ShardingSphere-JDBC配置
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: root
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/yan0?allowMultiQueries=true&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: root
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/yan1?allowMultiQueries=true&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
    sharding:
      tables:
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: t_order_$->{id % 3}
          key-generator:
            column: id
            type: SNOWFLAKE
        oper_exc:
          key-generator:
            column: id
            type: SNOWFLAKE
        oper_log:
          key-generator:
            column: id
            type: SNOWFLAKE
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
    #是否开启SQL显示，默认值: false
    props:
      sql:
        show: true



mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志

#项目版本号
test:
  version: 1.0.0

#rocketmq 配置项，对应 RocketMQProperties 配置类
rocketmq:
  # The name server for rocketMQ, formats: `host:port;host:port`.
  name-server: 集群ip+端口
  # Producer 配置项
  producer:
    # 生产者分组
    group: zty-demo
    # 发送消息超时时间，单位：毫秒。默认为 3000
    send-message-timeout: 5000
    # 消息压缩阀值，当消息体的大小超过该阀值后，进行消息压缩。默认为 4 * 1024B
    compress-message-body-threshold: 4096
    # 消息体的最大允许大小。。默认为 4 * 1024 * 1024B
    max-message-size: 4194304
    # 同步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-failed: 3
    # 异步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-async-failed: 3
    # 发送消息给 Broker 时，如果发送失败，是否重试另外一台 Broker 。默认为 false
    retry-next-server: true
    #可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    access-key:
    secret-key:
    # 是否开启消息轨迹功能。默认为 true 开启。 可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/msg_trace/user_guide.md 文档
    enable-msg-trace: true
    # 自定义消息轨迹的 Topic 。默认为 RMQ_SYS_TRACE_TOPIC
    customized-trace-topic: ZTY-DEMO-TRACE-TOPIC
  # Consumer 配置项
  consumer:
    # 配置某个消费分组，是否监听指定 Topic 。结构为 Map<消费者分组, <Topic, Boolean>> 。默认情况下，不配置表示监听。   一般情况下，只有我们在想不监听消费某个消费分组的某个 Topic 时，才需要配 listener 配置。
    listeners:
      test-consumer-group:
        # 关闭 test-consumer-group 对 topic1 的监听消费
        topic1: false






